= Deux gameplay adaptés au développement logiciels
Julien Kirch
v0.1, 2018-02-06
:article_lang: fr
:article_description: Coder n'est pas jouer, mais on peut quand même reprendre des idées.

Une des choses les plus difficiles à faire quand on créé un jeu vidéo est de concevoir gameplay amusant à manipuler, qui fasse en sorte que le·a joueur·euse se divertisse.

Pour cela pas de formule magique : ces systèmes se construisent par essais et erreurs ce qui prend du temps.
Les concepteur·rice·s ont définis un ensembles de notions pour y voir plus clair dans ce qui fonctionne et ce qui ne fonctionne pas.

Je trouve deux d'entre elles intéressantes pour comprendre des situations qui me sont arrivées dans le développement logiciel.

== L'abstraction inversée

Le premier modèle de gameplay n'a pas de nom officiel.

Son représentant le plus connu est Sonic.
Dans la plupart des jeux de plateformes Sonic, l'accent est mis sur la vitesse : la sensation de parcourir les niveaux à toute allure est grisante et le différencie des autres jeux de plateformes au rythme plus lent.

Sauf que cette manière de jouer a deux limites :

* elle ne fonctionne que pour les premiers niveaux, la structure et les pièges des niveaux 

Malheureusement, 


== Le fonctionnement émergent