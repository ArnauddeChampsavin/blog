= L'architecture de SI existe-t-elle encore ?
Julien Kirch
v0.1, 2018-05-14
:article_lang: fr

Quand je me présente en tant qu'architecte de SI aux nouveaux arrivants à OCTO j'obtiens régulièrement deux types de réponses :

- avec les outils et les technologies modernes comme le cloud, il n'y a plus besoin d'architecture de SI : ils suffit d'utiliser les bonnes briques ;
- les architectes de SI c'est utile dans des contextes pas agiles comme les grosses entreprises à l'ancienne, mais si on fait de l'agile on peut s'en passer.

Cela m'a donné l'idée d'écrire cet article où je vais tenter d'expliquer pourquoi ça n'est pas le cas, ou au moins pas le cas dans toutes les situations.

Je suis architecte de SI et j'interviens souvent dans des organisations et sur des systèmes de grandes tailles.
Cet article est donc un peu une défense de mon travail, prenez-le avec un grain de sel.

== L'architecture de SI existe-t-elle encore ?

Depuis le début des années 2000, l'architecture de SI a profondément changé.

Il y a 15 ans, l'architecture de SI était très contraintes par ce que les outils étaient capables de faire, une vraie expertise de ces briques était donc nécessaire pour faire les bons choix et guider leur mise en œuvre.
De même la capacité d'intégrer des systèmes dépendait des technologies disponibles, et pour des besoins pointus des solutions exotiques pouvaient être nécessaires, ce qui à nouveau demandait des connaissances spécifiques.

De nos jours les outils et les protocoles sont beaucoup plus matures, avec le cloud beaucoup de ces logiciels sont disponible avec quelques clicks.
Cela signifie que, dans beaucoup de cas, certaines compétences ne sont plus nécessaires.

Mais cela ne veut pas dire que l'architecture de SI a disparu, c'est seulement que _ces compétences ne sont plus nécessaires pour faire de l'architecture de SI_.

L'architecture de SI consiste à définir des stratégies globales à des organisation, gérer des transformations de système, ou piloter des systèmes complexes.
Cela a nécessité un certain type d'expertise et ça n'est plus le cas : si les prérequis ont changé la finalité reste la même.

Les vendeurs fournissent de plus en plus de solutions et de patterns clés en main.
Ils peuvent répondre à des "comment" et simplifient la mise en œuvre, mais ne remplacent pas la définition d'une stratégie de SI ni la capacité à accompagner les personnes qui la réalisent.

Oui il est possible de construire des systèmes qui fonctionnent en se passant de ce type de questions, mais procéder ainsi c'est augmenter vos chances de ne pas y parvenir, ou de construire un système fragile et difficile à faire vivre.

L'architecture de SI a donc changé, mais elle n'a pas disparu.

== L'architecture de SI et l'agile

* En cycle en V on définit l'archi de manière beaucoup plus complète dès le début, en agile on essaie de le faire "au dernier moment", c'est à dire au fur et à mesure quand il y en a besoin
* Cela ne veut pas dire qu'il n'y a plus d'archi, seulement qu'il n'y a plus forcément de phase consacrée uniquement à définir l'archi
* Si vous voulez qu'un développement s'intègre dans un SI il faut faire de l'archi
** exposer des services REST ne suffit pas, parfois d'autre modes d'échanges sont plus adaptés
** il y a les questions de gouvernance de données ou de gestion de cycle de vie qui sont des questions transverses qui ne se résolvent pas au niveau de l'appli
* L'architecte est aussi là pour aider à donner de la cohérence, et permettre des optimisation globale au niveau du SI alors que l'équipe projet peut avoir tendance à préférer les optimisations locales à l'application
* L'architecture de SI est là même si on peut choisir de ne pas s'en occuper et de la choisir plutôt que de la subir

* Les architectes de SI utilisent beaucoup de pratique qui sont issues ou qui sont arrivée par l'agile, par exemple les ateliers, même pour faire de l'architecture de SI en mode cycle en V

=> L'agile n'a pas supprimé l'architecture en agile
=> Même en agile l'architecture peut être un frein pour les projets pour des besoins d'harmonisation ou d'efficacité globale

== Les développeur·euse·s et l'architecture de SI

* La plupart des personnes qui développent ont un vernis sur l'archi de SI, notament parce que ce sont des extensions des questions d'architecture logicielles
* Le vernis est d'ailleurs très utile pour comprendre les enjeux, et faire en sorte que ce qui est fait dans le projet soit cohérent avec les décisions d'architecture au niveau du SI
* Mais le vernis n'est pas suffisant pour décider de tout : 
** Certaines décisions demandent de l'expertise en archi de SI et cette expertise demande de l'expérience
** Dans une organisation plus grande avec des groupes séparés pour l'infra ou la sécu, l'architecte de SI a aussi souvent le rôle d'aider à faire le lien avec ces équipes car c'est la personne qui a le recul pour cela
* Certaines personnes qui développent ont une vraie compétence d'architecture de SI, pas besoin d'avoir le titre ou de faire de l'architecture à plein temps pour être légitime sur le sujet
* On peut choisir de se passer d'avoir de l'expertise à l'avance et apprendre quand il y en a besoin, mais ça signifie prendre le temps d'apprendre et prendre le risque de se tromper, potentiellement sur chaque projet

=> Même si vous avez eu de mauvaises expériences avec des architectes, la compétence a toujours une utilité

== L'architecte et les projets

* C'est mieux quand les architectes font partie d'un projet car c'est mieux pour comprendre les enjeux et ça évite l'effet tour d'ivoire
** Dans des contextes agiles et avec des technos qui évoluent rapidement, garder un pieds sur les projets ça permet aux architectes de rester pertinents dans leurs propositions
* On a arrété de croire que les architectes pouvaient être garrant·e·s de l'architecture : les personnes qui développent ont beaucoup d'importance pour avoir une architecture qui fonctionne
* Souvent il n'y a pas d'architecture à faire à plein temps => pour être sur un projet il faut que l'architecte sache faire autre chose qui soit utile au projet
* L'idéal c'est d'avoir un architecte "à demeure" mais difficile d'avoir des archis expérimentés sur tous les projets surtout que les besoins en architecture varient dans la vie des projets avec des phases sans besoin en architecture
* Solution médianne : avoir des architectes en résidence sur les projets qui ont besoin de beaucoup de temps à passer sur l'archi, et des architectes en mode "consulting" pour les autres projets, que ça soit des architectes projets qui font ça une partie du temps, ou des architectes qui ne font que du consulting
* Même quand il n'y a pas de besoins fort, il est utile pour les projets d'avoir des personnes qui ont un vernis sur l'archi de SI pour faire le relai avec le reste du SI, même si ces personnes n'ont pas le titre d'architecte
* Des personnes qui veulent progresser en architecture de SI doivent pouvoir le pratiquer, et donc ne pas rester trop longtemps sur les projets sans besoin d'architecture

=> Les tours d'ivoires sont à terre, mais des archis sur tous les projets c'est compliqué

== Conclusion

L'architecture et les outils posent de moins en moins de contraintes et grâce à cela on a de moins en moins besoins d'architectes.
De même les nouvelles manière de travailler diminuent le temps et l'énergie dépensée pour se mettre d'accord et formaliser ces questions.

Cela signifie que les architectes - entre autres - ont bien fait leur boulot, et ont su faire progresser leur discipline.

Peut-être qu'un jours on pourra se passer de ces compétences et donc de ces personnes.

Mais pour le moment il y a toujours besoins d'eux et d'elles.
Vous pouvez faire de l'architecture sans que personne n'ait de titre d'architecte, mais ne pas avoir de compétence d'architecture ou choisir de ne pas faire d'architecture c'est prendre des risques.
