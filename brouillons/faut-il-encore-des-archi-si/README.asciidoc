= L'architecture de SI existe-t-elle encore ?
Julien Kirch
v0.1, 2018-05-14
:article_lang: fr

Quand je me présente en tant qu'architecte de SI aux nouveaux arrivants à OCTO j'obtiens régulièrement deux types réponses :

- avec les outils et les technologies modernes comme le cloud, il n'y a plus besoin d'architecture de SI ;
- les architectes de SI c'est utile dans des contextes pas agiles comme les grosses entreprises à l'ancienne, mais si on fait de l'agile il·elle·s ne servent plus à rien.

Je vais tenter d'expliquer pourquoi ça n'est pas le cas, ou au moins pas le cas dans toutes les situations.

== Avertissement

Je suis architecte de SI et j'interviens souvent dans des organisations et sur des systèmes de grandes tailles.
Cet article est donc un peu une défense de mon boulot, prenez-le avec un grain de sel.

== L'architecture de SI existe-t-elle encore ?

* Depuis le début des années 2000, l'architecture de SI a profondément changé, grâce aux progrès des outils et les questions d'intégration entre système
* Avant l'archi de SI était très contraintes par ce que les outils étaient capables de faire, donc il fallait une vraie expértise dans les outils pour faire les bons choix et guider la mise en œuvre
* De même la capacité d'intégration dépendant des technologies disponibles et des solutions exotiques pouvaient être nécessaires pour des besoins pointus
* Maintenant les outils et les protocoles sont beaucoup plus matures => il y a besoin de moins de compétences sur ces sujets pour faire de l'archi de SI
* Mais ça ne veut pas dire que l'archi de SI a disparu, c'est seulement des compétence qui sont nécessaire pour faire de l'archi de SI
* L'archi de SI c'est définir des stratégie globales à une organisation, gérer des transformations de système, ou piloter des systèmes complexes
* Se reposer sur les patterns proposés par les vendeurs peut répondre à des comment, les outils packagés simplifient la mise en œuvre, mais ne définit pas une cible d'architecture
* L'archi de SI ce n'est pas que de la tech c'est aussi parvenir à mettre les personnes d'accord, accompagner les équipes et rédiger les documents, ça demande de savoir parler la langue des différentes personnes

=> Oui l'archi de SI existe encore, même si les compétences nécessaires ont changé

== L'architecture de SI et l'agile

* En cycle en V on définit l'archi de manière beaucoup plus complète dès le début, en agile on essaie de le faire "au dernier moment", c'est à dire au fur et à mesure quand il y en a besoin
* Cela ne veut pas dire qu'il n'y a plus d'archi, seulement qu'il n'y a plus forcément de phase consacrée uniquement à définir l'archi
* Si vous voulez qu'un développement s'intègre dans un SI il faut faire de l'archi
** exposer des services REST ne suffit pas, parfois d'autre modes d'échanges sont plus adaptés
** il y a les questions de gouvernance de données ou de gestion de cycle de vie qui sont des questions transverses qui ne se résolvent pas au niveau de l'appli
* L'architecte est aussi là pour aider à donner de la cohérence, et permettre des optimisation globale au niveau du SI alors que l'équipe projet peut avoir tendance à préférer les optimisations locales à l'application
* L'architecture de SI est là même si on peut choisir de ne pas s'en occuper et de la choisir plutôt que de la subir

* Les architectes de SI utilisent beaucoup de pratique qui sont issues ou qui sont arrivée par l'agile, par exemple les ateliers, même pour faire de l'architecture de SI en mode cycle en V

=> L'agile n'a pas supprimé l'architecture en agile

== Les développeur·euse·s et l'architecture de SI

* L'architecture de SI n'est pas limitée aux personnes qui ont le titre d'architecte
* La plupart des personnes qui développent ont un vernis sur l'archi de SI, notament parce que ce sont des extensions des questions d'architecture logicielles
* Le vernis est d'ailleurs très utile pour comprendre les enjeux, et faire en sorte que ce qui est fait dans le projet soit cohérent avec les décisions d'architecture au niveau du SI
* Mais le vernis n'est pas suffisant pour décider de tout : 
** Certaines décisions demandent de l'expertise en archi de SI, et cet expertise demande de l'expérience
** Dans une organisation plus grande avec des groupes séparer pour l'infra ou la sécu, l'architecte de SI a aussi souvent le rôle d'aider à faire le lien avec ces équipes car c'est la personne qui a le recul pour cela
* On peut se passer d'expertise et apprendre quand il y en a besoin, mais ça signifie prendre le temps d'apprendre et prendre le risque de se tromper, potentiellement sur chaque projet

=> La compétence a toujours une utilité

== L'architecte et les projets

* C'est mieux quand les architectes font partie d'un projet car c'est mieux pour comprendre les enjeux et ça évite l'effet tour d'ivoire
** Dans des contextes agiles et avec des technos qui évoluent rapidement, garder un pieds sur les projets ça permet aux architectes de rester pertinents dans leurs propositions
* Souvent il n'y a pas d'architecture à faire à plein temps => pour être sur un projet il faut que l'architecte sache faire autre chose qui soit utile au projet
* L'idéal c'est d'avoir un architecte "à demeure" mais difficile d'avoir des archis expérimentés sur tous les projets surtout que les besoins en architecture varient dans la vie des projets avec des phases sans besoin en architecture
* Solution médianne : avoir des architectes en résidence sur les projets qui ont besoin de beaucoup de temps à passer sur l'archi, et des architectes en mode "consulting" pour les autres projets, que ça soit des architectes projets qui font ça une partie du temps, ou des architectes qui ne font que du consulting

=> Les tours d'ivoires sont à terre, mais des archis sur tous les projets c'est compliqué

== Conclusion

L'architecture et les architectes ont changé mais sont toujours là