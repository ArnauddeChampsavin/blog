= L'architecture de SI existe-t-elle encore ?
Julien Kirch
v0.1, 2018-05-14
:article_lang: fr

Quand je me présente en tant qu'architecte de SI aux nouveaux arrivants à OCTO j'obtiens régulièrement deux types réponses :

- avec les outils et les technologies modernes comme le cloud, il n'y a plus besoin d'architecture de SI ;
- les architectes de SI c'est utile dans des contextes pas agiles comme les grosses entreprises à l'ancienne, mais si on fait de l'agile il·elle·s ne servent plus à rien.

Je vais tenter d'expliquer pourquoi ça n'est pas le cas, ou au moins pas le cas dans toutes les situations.

== Avertissement

Je suis architecte de SI et j'interviens souvent dans des organisations et sur des systèmes de grandes tailles.
Cet article est donc un peu une défense de mon boulot, prenez le avec un grain de sel.

== L'architecture de SI existe-t-elle encore ?

Depuis que j'ai commencé à travailler au début des années 2000, l'architecture de SI a profondément changé, grâce aux progrès des outils et des protocoles.

À l'époque les outils d'entreprises comme les bus de messages ou des EAI étaient souvent difficiles à utiliser et leur emploi demandait donc une vraie compétence.
De ce fait les architecte SI qui préconisaient des solutions devaient bien connaître les outils pour être capable de les mettre en œuvre.
De plus les limites des différents outils contaignaient ce qu'il était possible de faire dès lors qu'on s'éloignait des besoins standard, par exemple dès que la volumétrie était conséquente : les architectures étaient donc dépendantes des outils et du niveau d'expertise disponible.
QQQQ

* Les outils sont plus simples à utiliser et les protocoles se standardisent mais l'architecture de SI est encore un sujet
* Ça demande de connaître les outils, mais ça ne suffit pas, si tu te laisses guider par les outils tu ne fais pas de la bonne archi
* Par exemple pour avoir une stratégie ou gérer une transformation à grande échelle, ce sont des compétences d'architecture spécifiques mais aussi des compétence d'organisation et de rédaction

== Les développeur·euse·s et l'architecture de SI

* L'architecture de SI n'est pas limitée aux personnes qui ont le titre d'architecte
* La plupart des personnes qui développent ont un vernis sur l'archi de SI, notament parce que ce sont des extensions des questions d'architecture logicielles
* Le vernis est d'ailleurs très utile pour comprendre les enjeux, et faire en sorte que ce qui est fait dans le projet soit cohérent avec les décisions d'architecture au niveau du SI
* Mais le vernis n'est pas suffisant pour décider de tout : certaines décisions demandent de l'expertise en archi de SI, et cet expertise demande de l'expérience
* De la même manière que tout le monde dans une équipe n'est pas spécialiste de tous les outils, tout le monde n'est pas pointu en archi de SI
* En plus tout le monde n'a pas envie de travailler sur l'archi de SI : le sujet et un peu mou, beaucoup d'échanges pour mettre les personnes d'accord
* Du coup il faut reconnaître la compétence

== L'architecte et les projets

* C'est mieux quand les architectes font partie d'un projet car il comprend mieux les enjeux et ça évite l'effet tour d'ivoire, mais deux soucis
** Souvent il n'y a pas d'architecture à faire à plein temps => il faut que l'architecte sache faire autre chose
** Le temps à passer à faire de l'archi n'est pas régulier et parfois pas prédictible => le temps disponible pour faire autre chose que de l'archi n'est pas pratique, par exemple limiter le temps sur les sujet qui sont bloquants pour les autres
* Pour les petits projet